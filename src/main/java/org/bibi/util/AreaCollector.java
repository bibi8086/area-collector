package org.bibi.util;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * 全国地区爬取
 *
 * @author Tom（bibi8086@gmail.com）
 * @date 2018/7/18 22:02
 */
public class AreaCollector {

    private final Logger logger = LoggerFactory.getLogger(getClass());

    /**
     * 采集时间间隔
     */
    private final static int SCAN_INTERVAL = 0;
    /**
     * 请求超时时间
     */
    private final static int TIMEOUT = 3 * 1000;
    /**
     * 请求失败重复次数
     */
    private final static int FAILURE_REPEAT_TIME = 5;
    /**
     * css中常量
     */
    private static Map<Integer, String> cssMap = new HashMap<>();
    /**
     * 缓冲流
     */
    private static BufferedWriter bufferedWriter = null;
    /**
     * 分割线
     */
    private final static String LINE = "--------";
    /**
     * 国家统计局2017年统计用区划代码和城乡划分代码网站
     */
    private final static String AREA_URL = "http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2017/index.html";

    /**
     * 是否裁剪部分（自治州和自治县）地区名称
     */
    private final static boolean SHORT_NAME = true;

    static {
        // 省
        cssMap.put(1, "provincetr");
        // 市
        cssMap.put(2, "citytr");
        // 县（区）
        cssMap.put(3, "countytr");
        // 乡（镇）
        cssMap.put(4, "towntr");
        // 村
        cssMap.put(5, "villagetr");
    }

    public static void main(String[] args) {
        String fileName = "area-" + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()) + ".sql";
        new AreaCollector().run(fileName);
    }

    /**
     * 开始采集
     *
     * @param fileName 保存文件名
     */
    public void run(String fileName) {

        // 开始时间
        long startTime = System.currentTimeMillis();

        // 初始地区等级， 1：省级，2：市级，3,：县级，4：乡级
        int level = 1;

        // 文件目录
        String dir = "data";
        File f = new File(dir);
        //判断文件夹是否存在
        if (!f.exists()) {
            // 创建文件目录
            if(!f.mkdirs()){
                logger.error("文件目录{}创建失败", dir);
                throw new RuntimeException("文件目录" + dir + "创建失败");
            }
        }

        // 初始化文件
        initFile(new File(dir + "/" + fileName));

        //System.out.println("获取[全国]地区链接页面dom：" + AREA_URL);
        logger.info("获取[全国]地区链接页面dom：{}", AREA_URL);
        Document doc = parse(AREA_URL);

        // System.out.println("获取所有包含[" + cssMap.get(level) + "]样式的tr节点......");
        logger.debug("获取所有包含[{}]样式的tr节点......", cssMap.get(level));
        Elements rowProvince = doc.select("tr." + cssMap.get(level));
        // System.out.println("获取所有包含[" + cssMap.get(level) + "]样式的tr节点成功，共" + rowProvince.size() + "个节点");
        logger.debug("获取所有包含[{}]样式的tr节点成功，共{}个节点", cssMap.get(level), rowProvince.size());
        if (rowProvince.size() == 0) {
            // System.out.println("获取[全国]地区链接页面dom失败");
            logger.error("获取[全国]地区链接页面dom失败");
            throw new RuntimeException("获取[全国]地区链接页面dom失败");
        }
        // System.out.println("获取[全国]地区链接页面dom成功");
        logger.debug("获取[全国]地区链接页面dom成功");

        String sql = "CREATE TABLE IF NOT EXISTS `area` (\n" +
                "  `id` INT(11) NOT NULL COMMENT 'id',\n" +
                "  `pid` INT(11) NOT NULL COMMENT '父级id',\n" +
                "  `name` VARCHAR(50) DEFAULT '' COMMENT '名称',\n" +
                "  `shortname` VARCHAR(40) DEFAULT '' COMMENT '简称',\n" +
                "  `longitude` DOUBLE(12,6) DEFAULT '0.000000' COMMENT '中心经度',\n" +
                "  `latitude` DOUBLE(12,6) DEFAULT '0.000000' COMMENT '中心纬度',\n" +
                "  `level` SMALLINT(6) DEFAULT '0' COMMENT '级别，1：省份，2：城市，3：县/区，4：乡镇/街道办',\n" +
                "  `sort` MEDIUMINT(9) DEFAULT '0' COMMENT '排序',\n" +
                "  `status` TINYINT(4) DEFAULT '1' COMMENT '状态1有效',\n" +
                "  PRIMARY KEY (`id`),\n" +
                "  KEY `pid` (`pid`),\n" +
                "  KEY `IDX_position` (`longitude`,`latitude`),\n" +
                "  KEY `IDX_level` (`level`)\n" +
                ") ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT '地区表';\n\n" +
                "INSERT INTO `area` (`id`, `pid`, `name`, `shortname`, `level`, `sort`) VALUES";
        printInfo(sql);

        // System.out.println("解析 Start......");
        logger.debug("解析 Start......");
        // 遍历每一行
        for (Element provinceElement : rowProvince) {

            // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "列表[" + provinceElement.text() + "] start......");
            logger.debug("{}列表[{}] start......", String.join("", Collections.nCopies(level, LINE)), provinceElement.text());
            // System.out.println(provinceElement.html());
            // logger.debug(provinceElement.html());

            // 获取每组tr中所有的a标签，这里tr中多个td,每个td中一个a标签
            Elements aList = provinceElement.select("a");
            // 排序
            int sort = 0;
            // 遍历每一个省份
            for (Element aProvince : aList) {
                sort += 1;
                // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "[" + aProvince.text() + "] start......");
                logger.debug("{}[{}] start......", String.join("", Collections.nCopies(level, LINE)), aProvince.text());
                printInfo(aProvince, level, sort);
                parseNextLevel(aProvince, level + 1);
                // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "[" + aProvince.text() + "] complete");
                logger.debug("{}[{}] complete", String.join("", Collections.nCopies(level, LINE)), aProvince.text());
            }
            // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "列表[" + provinceElement.text() + "] complete");
            logger.debug("{}列表[{}] complete", String.join("", Collections.nCopies(level, LINE)), provinceElement.text());
        }
        // System.out.println("解析 Complete！！！");
        logger.debug("解析 Complete！！！");


        // 写入港澳台地区

        sql = "('710000', '0', '台湾', '台湾', '1', '34'),\n" +
                "('710100', '710000', '台北市', '台北', '2', '12'),\n" +
                "('710101', '710100', '中正区', '中正', '3', '12'),\n" +
                "('710102', '710100', '大同区', '大同', '3', '3'),\n" +
                "('710103', '710100', '中山区', '中山', '3', '11'),\n" +
                "('710104', '710100', '松山区', '松山', '3', '8'),\n" +
                "('710105', '710100', '大安区', '大安', '3', '2'),\n" +
                "('710106', '710100', '万华区', '万华', '3', '9'),\n" +
                "('710107', '710100', '信义区', '信义', '3', '6'),\n" +
                "('710108', '710100', '士林区', '士林', '3', '7'),\n" +
                "('710109', '710100', '北投区', '北投', '3', '1'),\n" +
                "('710110', '710100', '内湖区', '内湖', '3', '5'),\n" +
                "('710111', '710100', '南港区', '南港', '3', '4'),\n" +
                "('710112', '710100', '文山区', '文山', '3', '10'),\n" +
                "('710200', '710000', '高雄市', '高雄', '2', '1'),\n" +
                "('710201', '710200', '新兴区', '新兴', '3', '34'),\n" +
                "('710202', '710200', '前金区', '前金', '3', '21'),\n" +
                "('710203', '710200', '芩雅区', '芩雅', '3', '26'),\n" +
                "('710204', '710200', '盐埕区', '盐埕', '3', '36'),\n" +
                "('710205', '710200', '鼓山区', '鼓山', '3', '7'),\n" +
                "('710206', '710200', '旗津区', '旗津', '3', '25'),\n" +
                "('710207', '710200', '前镇区', '前镇', '3', '22'),\n" +
                "('710208', '710200', '三民区', '三民', '3', '29'),\n" +
                "('710209', '710200', '左营区', '左营', '3', '39'),\n" +
                "('710210', '710200', '楠梓区', '楠梓', '3', '18'),\n" +
                "('710211', '710200', '小港区', '小港', '3', '33'),\n" +
                "('710241', '710200', '苓雅区', '苓雅', '3', '10'),\n" +
                "('710242', '710200', '仁武区', '仁武', '3', '28'),\n" +
                "('710243', '710200', '大社区', '大社', '3', '3'),\n" +
                "('710244', '710200', '冈山区', '冈山', '3', '6'),\n" +
                "('710245', '710200', '路竹区', '路竹', '3', '13'),\n" +
                "('710246', '710200', '阿莲区', '阿莲', '3', '1'),\n" +
                "('710247', '710200', '田寮区', '田寮', '3', '32'),\n" +
                "('710248', '710200', '燕巢区', '燕巢', '3', '35'),\n" +
                "('710249', '710200', '桥头区', '桥头', '3', '23'),\n" +
                "('710250', '710200', '梓官区', '梓官', '3', '38'),\n" +
                "('710251', '710200', '弥陀区', '弥陀', '3', '16'),\n" +
                "('710252', '710200', '永安区', '永安', '3', '37'),\n" +
                "('710253', '710200', '湖内区', '湖内', '3', '8'),\n" +
                "('710254', '710200', '凤山区', '凤山', '3', '5'),\n" +
                "('710255', '710200', '大寮区', '大寮', '3', '2'),\n" +
                "('710256', '710200', '林园区', '林园', '3', '11'),\n" +
                "('710257', '710200', '鸟松区', '鸟松', '3', '20'),\n" +
                "('710258', '710200', '大树区', '大树', '3', '4'),\n" +
                "('710259', '710200', '旗山区', '旗山', '3', '27'),\n" +
                "('710260', '710200', '美浓区', '美浓', '3', '15'),\n" +
                "('710261', '710200', '六龟区', '六龟', '3', '12'),\n" +
                "('710262', '710200', '内门区', '内门', '3', '19'),\n" +
                "('710263', '710200', '杉林区', '杉林', '3', '30'),\n" +
                "('710264', '710200', '甲仙区', '甲仙', '3', '9'),\n" +
                "('710265', '710200', '桃源区', '桃源', '3', '31'),\n" +
                "('710266', '710200', '那玛夏区', '那玛夏', '3', '17'),\n" +
                "('710267', '710200', '茂林区', '茂林', '3', '14'),\n" +
                "('710268', '710200', '茄萣区', '茄萣', '3', '24'),\n" +
                "('710300', '710000', '台南市', '台南', '2', '14'),\n" +
                "('710301', '710300', '中西区', '中西', '3', '36'),\n" +
                "('710302', '710300', '东区', '东区', '3', '8'),\n" +
                "('710303', '710300', '南区', '南区', '3', '21'),\n" +
                "('710304', '710300', '北区', '北区', '3', '6'),\n" +
                "('710305', '710300', '安平区', '安平', '3', '3'),\n" +
                "('710306', '710300', '安南区', '安南', '3', '2'),\n" +
                "('710339', '710300', '永康区', '永康', '3', '34'),\n" +
                "('710340', '710300', '归仁区', '归仁', '3', '12'),\n" +
                "('710341', '710300', '新化区', '新化', '3', '29'),\n" +
                "('710342', '710300', '左镇区', '左镇', '3', '37'),\n" +
                "('710343', '710300', '玉井区', '玉井', '3', '35'),\n" +
                "('710344', '710300', '楠西区', '楠西', '3', '22'),\n" +
                "('710345', '710300', '南化区', '南化', '3', '20'),\n" +
                "('710346', '710300', '仁德区', '仁德', '3', '24'),\n" +
                "('710347', '710300', '关庙区', '关庙', '3', '10'),\n" +
                "('710348', '710300', '龙崎区', '龙崎', '3', '18'),\n" +
                "('710349', '710300', '官田区', '官田', '3', '11'),\n" +
                "('710350', '710300', '麻豆区', '麻豆', '3', '19'),\n" +
                "('710351', '710300', '佳里区', '佳里', '3', '14'),\n" +
                "('710352', '710300', '西港区', '西港', '3', '28'),\n" +
                "('710353', '710300', '七股区', '七股', '3', '23'),\n" +
                "('710354', '710300', '将军区', '将军', '3', '15'),\n" +
                "('710355', '710300', '学甲区', '学甲', '3', '32'),\n" +
                "('710356', '710300', '北门区', '北门', '3', '5'),\n" +
                "('710357', '710300', '新营区', '新营', '3', '31'),\n" +
                "('710358', '710300', '后壁区', '后壁', '3', '13'),\n" +
                "('710359', '710300', '白河区', '白河', '3', '4'),\n" +
                "('710360', '710300', '东山区', '东山', '3', '9'),\n" +
                "('710361', '710300', '六甲区', '六甲', '3', '16'),\n" +
                "('710362', '710300', '下营区', '下营', '3', '27'),\n" +
                "('710363', '710300', '柳营区', '柳营', '3', '17'),\n" +
                "('710364', '710300', '盐水区', '盐水', '3', '33'),\n" +
                "('710365', '710300', '善化区', '善化', '3', '25'),\n" +
                "('710366', '710300', '大内区', '大内', '3', '7'),\n" +
                "('710367', '710300', '山上区', '山上', '3', '26'),\n" +
                "('710368', '710300', '新市区', '新市', '3', '30'),\n" +
                "('710369', '710300', '安定区', '安定', '3', '1'),\n" +
                "('710400', '710000', '台中市', '台中', '2', '15'),\n" +
                "('710401', '710400', '中区', '中区', '3', '29'),\n" +
                "('710402', '710400', '东区', '东区', '3', '8'),\n" +
                "('710403', '710400', '南区', '南区', '3', '14'),\n" +
                "('710404', '710400', '西区', '西区', '3', '27'),\n" +
                "('710405', '710400', '北区', '北区', '3', '1'),\n" +
                "('710406', '710400', '北屯区', '北屯', '3', '2'),\n" +
                "('710407', '710400', '西屯区', '西屯', '3', '28'),\n" +
                "('710408', '710400', '南屯区', '南屯', '3', '15'),\n" +
                "('710431', '710400', '太平区', '太平', '3', '20'),\n" +
                "('710432', '710400', '大里区', '大里', '3', '6'),\n" +
                "('710433', '710400', '雾峰区', '雾峰', '3', '23'),\n" +
                "('710434', '710400', '乌日区', '乌日', '3', '25'),\n" +
                "('710435', '710400', '丰原区', '丰原', '3', '10'),\n" +
                "('710436', '710400', '后里区', '后里', '3', '12'),\n" +
                "('710437', '710400', '石冈区', '石冈', '3', '19'),\n" +
                "('710438', '710400', '东势区', '东势', '3', '9'),\n" +
                "('710439', '710400', '和平区', '和平', '3', '11'),\n" +
                "('710440', '710400', '新社区', '新社', '3', '26'),\n" +
                "('710441', '710400', '潭子区', '潭子', '3', '21'),\n" +
                "('710442', '710400', '大雅区', '大雅', '3', '7'),\n" +
                "('710443', '710400', '神冈区', '神冈', '3', '18'),\n" +
                "('710444', '710400', '大肚区', '大肚', '3', '4'),\n" +
                "('710445', '710400', '沙鹿区', '沙鹿', '3', '17'),\n" +
                "('710446', '710400', '龙井区', '龙井', '3', '13'),\n" +
                "('710447', '710400', '梧栖区', '梧栖', '3', '24'),\n" +
                "('710448', '710400', '清水区', '清水', '3', '16'),\n" +
                "('710449', '710400', '大甲区', '大甲', '3', '5'),\n" +
                "('710450', '710400', '外埔区', '外埔', '3', '22'),\n" +
                "('710451', '710400', '大安区', '大安', '3', '3'),\n" +
                "('710500', '710000', '金门县', '金门', '2', '6'),\n" +
                "('710507', '710500', '金沙镇', '金沙', '3', '4'),\n" +
                "('710508', '710500', '金湖镇', '金湖', '3', '2'),\n" +
                "('710509', '710500', '金宁乡', '金宁', '3', '3'),\n" +
                "('710510', '710500', '金城镇', '金城', '3', '1'),\n" +
                "('710511', '710500', '烈屿乡', '烈屿', '3', '5'),\n" +
                "('710512', '710500', '乌坵乡', '乌坵', '3', '6'),\n" +
                "('710600', '710000', '南投县', '南投', '2', '9'),\n" +
                "('710614', '710600', '南投市', '南投', '3', '8'),\n" +
                "('710615', '710600', '中寮乡', '中寮', '3', '3'),\n" +
                "('710616', '710600', '草屯镇', '草屯', '3', '1'),\n" +
                "('710617', '710600', '国姓乡', '国姓', '3', '2'),\n" +
                "('710618', '710600', '埔里镇', '埔里', '3', '9'),\n" +
                "('710619', '710600', '仁爱乡', '仁爱', '3', '10'),\n" +
                "('710620', '710600', '名间乡', '名间', '3', '7'),\n" +
                "('710621', '710600', '集集镇', '集集', '3', '5'),\n" +
                "('710622', '710600', '水里乡', '水里', '3', '11'),\n" +
                "('710623', '710600', '鱼池乡', '鱼池', '3', '13'),\n" +
                "('710624', '710600', '信义乡', '信义', '3', '12'),\n" +
                "('710625', '710600', '竹山镇', '竹山', '3', '4'),\n" +
                "('710626', '710600', '鹿谷乡', '鹿谷', '3', '6'),\n" +
                "('710700', '710000', '基隆市', '基隆', '2', '5'),\n" +
                "('710701', '710700', '仁爱区', '仁爱', '3', '4'),\n" +
                "('710702', '710700', '信义区', '信义', '3', '5'),\n" +
                "('710703', '710700', '中正区', '中正', '3', '7'),\n" +
                "('710704', '710700', '中山区', '中山', '3', '6'),\n" +
                "('710705', '710700', '安乐区', '安乐', '3', '1'),\n" +
                "('710706', '710700', '暖暖区', '暖暖', '3', '2'),\n" +
                "('710707', '710700', '七堵区', '七堵', '3', '3'),\n" +
                "('710800', '710000', '新竹市', '新竹', '2', '18'),\n" +
                "('710801', '710800', '东区', '东区', '3', '2'),\n" +
                "('710802', '710800', '北区', '北区', '3', '1'),\n" +
                "('710803', '710800', '香山区', '香山', '3', '3'),\n" +
                "('710900', '710000', '嘉义市', '嘉义', '2', '3'),\n" +
                "('710901', '710900', '东区', '东区', '3', '1'),\n" +
                "('710902', '710900', '西区', '西区', '3', '2'),\n" +
                "('711100', '710000', '新北市', '新北', '2', '17'),\n" +
                "('711130', '711100', '万里区', '万里', '3', '25'),\n" +
                "('711131', '711100', '金山区', '金山', '3', '6'),\n" +
                "('711132', '711100', '板桥区', '板桥', '3', '2'),\n" +
                "('711133', '711100', '汐止区', '汐止', '3', '20'),\n" +
                "('711134', '711100', '深坑区', '深坑', '3', '15'),\n" +
                "('711135', '711100', '石碇区', '石碇', '3', '16'),\n" +
                "('711136', '711100', '瑞芳区', '瑞芳', '3', '11'),\n" +
                "('711137', '711100', '平溪区', '平溪', '3', '10'),\n" +
                "('711138', '711100', '双溪区', '双溪', '3', '18'),\n" +
                "('711139', '711100', '贡寮区', '贡寮', '3', '4'),\n" +
                "('711140', '711100', '新店区', '新店', '3', '21'),\n" +
                "('711141', '711100', '坪林区', '坪林', '3', '9'),\n" +
                "('711142', '711100', '乌来区', '乌来', '3', '27'),\n" +
                "('711143', '711100', '永和区', '永和', '3', '29'),\n" +
                "('711144', '711100', '中和区', '中和', '3', '5'),\n" +
                "('711145', '711100', '土城区', '土城', '3', '24'),\n" +
                "('711146', '711100', '三峡区', '三峡', '3', '14'),\n" +
                "('711147', '711100', '树林区', '树林', '3', '19'),\n" +
                "('711148', '711100', '莺歌区', '莺歌', '3', '28'),\n" +
                "('711149', '711100', '三重区', '三重', '3', '12'),\n" +
                "('711150', '711100', '新庄区', '新庄', '3', '22'),\n" +
                "('711151', '711100', '泰山区', '泰山', '3', '23'),\n" +
                "('711152', '711100', '林口区', '林口', '3', '7'),\n" +
                "('711153', '711100', '芦洲区', '芦洲', '3', '8'),\n" +
                "('711154', '711100', '五股区', '五股', '3', '26'),\n" +
                "('711155', '711100', '八里区', '八里', '3', '1'),\n" +
                "('711156', '711100', '淡水区', '淡水', '3', '3'),\n" +
                "('711157', '711100', '三芝区', '三芝', '3', '13'),\n" +
                "('711158', '711100', '石门区', '石门', '3', '17'),\n" +
                "('711200', '710000', '宜兰县', '宜兰', '2', '20'),\n" +
                "('711214', '711200', '宜兰市', '宜兰', '3', '12'),\n" +
                "('711215', '711200', '头城镇', '头城', '3', '10'),\n" +
                "('711216', '711200', '礁溪乡', '礁溪', '3', '5'),\n" +
                "('711217', '711200', '壮围乡', '壮围', '3', '4'),\n" +
                "('711218', '711200', '员山乡', '员山', '3', '13'),\n" +
                "('711219', '711200', '罗东镇', '罗东', '3', '6'),\n" +
                "('711220', '711200', '三星乡', '三星', '3', '8'),\n" +
                "('711221', '711200', '大同乡', '大同', '3', '1'),\n" +
                "('711222', '711200', '五结乡', '五结', '3', '11'),\n" +
                "('711223', '711200', '冬山乡', '冬山', '3', '3'),\n" +
                "('711224', '711200', '苏澳镇', '苏澳', '3', '9'),\n" +
                "('711225', '711200', '南澳乡', '南澳', '3', '7'),\n" +
                "('711226', '711200', '钓鱼台', '钓鱼', '3', '2'),\n" +
                "('711300', '710000', '新竹县', '新竹', '2', '19'),\n" +
                "('711314', '711300', '竹北市', '竹北', '3', '8'),\n" +
                "('711315', '711300', '湖口乡', '湖口', '3', '7'),\n" +
                "('711316', '711300', '新丰乡', '新丰', '3', '11'),\n" +
                "('711317', '711300', '新埔镇', '新埔', '3', '12'),\n" +
                "('711318', '711300', '关西镇', '关西', '3', '5'),\n" +
                "('711319', '711300', '芎林乡', '芎林', '3', '3'),\n" +
                "('711320', '711300', '宝山乡', '宝山', '3', '1'),\n" +
                "('711321', '711300', '竹东镇', '竹东', '3', '9'),\n" +
                "('711322', '711300', '五峰乡', '五峰', '3', '13'),\n" +
                "('711323', '711300', '横山乡', '横山', '3', '6'),\n" +
                "('711324', '711300', '尖石乡', '尖石', '3', '10'),\n" +
                "('711325', '711300', '北埔乡', '北埔', '3', '2'),\n" +
                "('711326', '711300', '峨眉乡', '峨眉', '3', '4'),\n" +
                "('711400', '710000', '桃园县', '桃园', '2', '16'),\n" +
                "('711414', '711400', '中坜市', '中坜', '3', '7'),\n" +
                "('711415', '711400', '平镇市', '平镇', '3', '10'),\n" +
                "('711416', '711400', '龙潭乡', '龙潭', '3', '8'),\n" +
                "('711417', '711400', '杨梅市', '杨梅', '3', '13'),\n" +
                "('711418', '711400', '新屋乡', '新屋', '3', '11'),\n" +
                "('711419', '711400', '观音乡', '观音', '3', '5'),\n" +
                "('711420', '711400', '桃园市', '桃园', '3', '12'),\n" +
                "('711421', '711400', '龟山乡', '龟山', '3', '6'),\n" +
                "('711422', '711400', '八德市', '八德', '3', '1'),\n" +
                "('711423', '711400', '大溪镇', '大溪', '3', '2'),\n" +
                "('711424', '711400', '复兴乡', '复兴', '3', '4'),\n" +
                "('711425', '711400', '大园乡', '大园', '3', '3'),\n" +
                "('711426', '711400', '芦竹乡', '芦竹', '3', '9'),\n" +
                "('711500', '710000', '苗栗县', '苗栗', '2', '8'),\n" +
                "('711519', '711500', '竹南镇', '竹南', '3', '4'),\n" +
                "('711520', '711500', '头份镇', '头份', '3', '15'),\n" +
                "('711521', '711500', '三湾乡', '三湾', '3', '8'),\n" +
                "('711522', '711500', '南庄乡', '南庄', '3', '7'),\n" +
                "('711523', '711500', '狮潭乡', '狮潭', '3', '10'),\n" +
                "('711524', '711500', '后龙镇', '后龙', '3', '3'),\n" +
                "('711525', '711500', '通霄镇', '通霄', '3', '14'),\n" +
                "('711526', '711500', '苑里镇', '苑里', '3', '17'),\n" +
                "('711527', '711500', '苗栗市', '苗栗', '3', '6'),\n" +
                "('711528', '711500', '造桥乡', '造桥', '3', '18'),\n" +
                "('711529', '711500', '头屋乡', '头屋', '3', '16'),\n" +
                "('711530', '711500', '公馆乡', '公馆', '3', '2'),\n" +
                "('711531', '711500', '大湖乡', '大湖', '3', '1'),\n" +
                "('711532', '711500', '泰安乡', '泰安', '3', '12'),\n" +
                "('711533', '711500', '铜锣乡', '铜锣', '3', '13'),\n" +
                "('711534', '711500', '三义乡', '三义', '3', '9'),\n" +
                "('711535', '711500', '西湖乡', '西湖', '3', '11'),\n" +
                "('711536', '711500', '卓兰镇', '卓兰', '3', '5'),\n" +
                "('711700', '710000', '彰化县', '彰化', '2', '22'),\n" +
                "('711727', '711700', '彰化市', '彰化', '3', '11'),\n" +
                "('711728', '711700', '芬园乡', '芬园', '3', '7'),\n" +
                "('711729', '711700', '花坛乡', '花坛', '3', '10'),\n" +
                "('711730', '711700', '秀水乡', '秀水', '3', '22'),\n" +
                "('711731', '711700', '鹿港镇', '鹿港', '3', '13'),\n" +
                "('711732', '711700', '福兴乡', '福兴', '3', '8'),\n" +
                "('711733', '711700', '线西乡', '线西', '3', '19'),\n" +
                "('711734', '711700', '和美镇', '和美', '3', '9'),\n" +
                "('711735', '711700', '伸港乡', '伸港', '3', '17'),\n" +
                "('711736', '711700', '员林镇', '员林', '3', '26'),\n" +
                "('711737', '711700', '社头乡', '社头', '3', '18'),\n" +
                "('711738', '711700', '永靖乡', '永靖', '3', '25'),\n" +
                "('711739', '711700', '埔心乡', '埔心', '3', '15'),\n" +
                "('711740', '711700', '溪湖镇', '溪湖', '3', '20'),\n" +
                "('711741', '711700', '大村乡', '大村', '3', '3'),\n" +
                "('711742', '711700', '埔盐乡', '埔盐', '3', '16'),\n" +
                "('711743', '711700', '田中镇', '田中', '3', '23'),\n" +
                "('711744', '711700', '北斗镇', '北斗', '3', '1'),\n" +
                "('711745', '711700', '田尾乡', '田尾', '3', '24'),\n" +
                "('711746', '711700', '埤头乡', '埤头', '3', '14'),\n" +
                "('711747', '711700', '溪州乡', '溪州', '3', '21'),\n" +
                "('711748', '711700', '竹塘乡', '竹塘', '3', '12'),\n" +
                "('711749', '711700', '二林镇', '二林', '3', '4'),\n" +
                "('711750', '711700', '大城乡', '大城', '3', '2'),\n" +
                "('711751', '711700', '芳苑乡', '芳苑', '3', '6'),\n" +
                "('711752', '711700', '二水乡', '二水', '3', '5'),\n" +
                "('711900', '710000', '嘉义县', '嘉义', '2', '4'),\n" +
                "('711919', '711900', '番路乡', '番路', '3', '7'),\n" +
                "('711920', '711900', '梅山乡', '梅山', '3', '11'),\n" +
                "('711921', '711900', '竹崎乡', '竹崎', '3', '9'),\n" +
                "('711922', '711900', '阿里山乡', '阿里山', '3', '1'),\n" +
                "('711923', '711900', '中埔乡', '中埔', '3', '8'),\n" +
                "('711924', '711900', '大埔乡', '大埔', '3', '5'),\n" +
                "('711925', '711900', '水上乡', '水上', '3', '14'),\n" +
                "('711926', '711900', '鹿草乡', '鹿草', '3', '2'),\n" +
                "('711927', '711900', '太保市', '太保', '3', '17'),\n" +
                "('711928', '711900', '朴子市', '朴子', '3', '13'),\n" +
                "('711929', '711900', '东石乡', '东石', '3', '6'),\n" +
                "('711930', '711900', '六脚乡', '六脚', '3', '10'),\n" +
                "('711931', '711900', '新港乡', '新港', '3', '16'),\n" +
                "('711932', '711900', '民雄乡', '民雄', '3', '12'),\n" +
                "('711933', '711900', '大林镇', '大林', '3', '4'),\n" +
                "('711934', '711900', '溪口乡', '溪口', '3', '15'),\n" +
                "('711935', '711900', '义竹乡', '义竹', '3', '18'),\n" +
                "('711936', '711900', '布袋镇', '布袋', '3', '3'),\n" +
                "('712100', '710000', '云林县', '云林', '2', '21'),\n" +
                "('712121', '712100', '斗南镇', '斗南', '3', '7'),\n" +
                "('712122', '712100', '大埤乡', '大埤', '3', '4'),\n" +
                "('712123', '712100', '虎尾镇', '虎尾', '3', '10'),\n" +
                "('712124', '712100', '土库镇', '土库', '3', '19'),\n" +
                "('712125', '712100', '褒忠乡', '褒忠', '3', '1'),\n" +
                "('712126', '712100', '东势乡', '东势', '3', '5'),\n" +
                "('712127', '712100', '台西乡', '台西', '3', '18'),\n" +
                "('712128', '712100', '仑背乡', '仑背', '3', '13'),\n" +
                "('712129', '712100', '麦寮乡', '麦寮', '3', '14'),\n" +
                "('712130', '712100', '斗六市', '斗六', '3', '6'),\n" +
                "('712131', '712100', '林内乡', '林内', '3', '12'),\n" +
                "('712132', '712100', '古坑乡', '古坑', '3', '9'),\n" +
                "('712133', '712100', '莿桐乡', '莿桐', '3', '3'),\n" +
                "('712134', '712100', '西螺镇', '西螺', '3', '17'),\n" +
                "('712135', '712100', '二仑乡', '二仑', '3', '8'),\n" +
                "('712136', '712100', '北港镇', '北港', '3', '2'),\n" +
                "('712137', '712100', '水林乡', '水林', '3', '15'),\n" +
                "('712138', '712100', '口湖乡', '口湖', '3', '11'),\n" +
                "('712139', '712100', '四湖乡', '四湖', '3', '16'),\n" +
                "('712140', '712100', '元长乡', '元长', '3', '20'),\n" +
                "('712400', '710000', '屏东县', '屏东', '2', '11'),\n" +
                "('712434', '712400', '屏东市', '屏东', '3', '24'),\n" +
                "('712435', '712400', '三地门乡', '三地门', '3', '25'),\n" +
                "('712436', '712400', '雾台乡', '雾台', '3', '32'),\n" +
                "('712437', '712400', '玛家乡', '玛家', '3', '19'),\n" +
                "('712438', '712400', '九如乡', '九如', '3', '12'),\n" +
                "('712439', '712400', '里港乡', '里港', '3', '15'),\n" +
                "('712440', '712400', '高树乡', '高树', '3', '8'),\n" +
                "('712441', '712400', '盐埔乡', '盐埔', '3', '33'),\n" +
                "('712442', '712400', '长治乡', '长治', '3', '1'),\n" +
                "('712443', '712400', '麟洛乡', '麟洛', '3', '17'),\n" +
                "('712444', '712400', '竹田乡', '竹田', '3', '10'),\n" +
                "('712445', '712400', '内埔乡', '内埔', '3', '23'),\n" +
                "('712446', '712400', '万丹乡', '万丹', '3', '30'),\n" +
                "('712447', '712400', '潮州镇', '潮州', '3', '2'),\n" +
                "('712448', '712400', '泰武乡', '泰武', '3', '29'),\n" +
                "('712449', '712400', '来义乡', '来义', '3', '14'),\n" +
                "('712450', '712400', '万峦乡', '万峦', '3', '31'),\n" +
                "('712451', '712400', '崁顶乡', '崁顶', '3', '13'),\n" +
                "('712452', '712400', '新埤乡', '新埤', '3', '27'),\n" +
                "('712453', '712400', '南州乡', '南州', '3', '22'),\n" +
                "('712454', '712400', '林边乡', '林边', '3', '16'),\n" +
                "('712455', '712400', '东港镇', '东港', '3', '5'),\n" +
                "('712456', '712400', '琉球乡', '琉球', '3', '18'),\n" +
                "('712457', '712400', '佳冬乡', '佳冬', '3', '11'),\n" +
                "('712458', '712400', '新园乡', '新园', '3', '28'),\n" +
                "('712459', '712400', '枋寮乡', '枋寮', '3', '6'),\n" +
                "('712460', '712400', '枋山乡', '枋山', '3', '7'),\n" +
                "('712461', '712400', '春日乡', '春日', '3', '4'),\n" +
                "('712462', '712400', '狮子乡', '狮子', '3', '26'),\n" +
                "('712463', '712400', '车城乡', '车城', '3', '3'),\n" +
                "('712464', '712400', '牡丹乡', '牡丹', '3', '21'),\n" +
                "('712465', '712400', '恒春镇', '恒春', '3', '9'),\n" +
                "('712466', '712400', '满州乡', '满州', '3', '20'),\n" +
                "('712500', '710000', '台东县', '台东', '2', '13'),\n" +
                "('712517', '712500', '台东市', '台东', '3', '14'),\n" +
                "('712518', '712500', '绿岛乡', '绿岛', '3', '13'),\n" +
                "('712519', '712500', '兰屿乡', '兰屿', '3', '11'),\n" +
                "('712520', '712500', '延平乡', '延平', '3', '16'),\n" +
                "('712521', '712500', '卑南乡', '卑南', '3', '1'),\n" +
                "('712522', '712500', '鹿野乡', '鹿野', '3', '12'),\n" +
                "('712523', '712500', '关山镇', '关山', '3', '8'),\n" +
                "('712524', '712500', '海端乡', '海端', '3', '9'),\n" +
                "('712525', '712500', '池上乡', '池上', '3', '4'),\n" +
                "('712526', '712500', '东河乡', '东河', '3', '7'),\n" +
                "('712527', '712500', '成功镇', '成功', '3', '3'),\n" +
                "('712528', '712500', '长滨乡', '长滨', '3', '2'),\n" +
                "('712529', '712500', '金峰乡', '金峰', '3', '10'),\n" +
                "('712530', '712500', '大武乡', '大武', '3', '6'),\n" +
                "('712531', '712500', '达仁乡', '达仁', '3', '5'),\n" +
                "('712532', '712500', '太麻里乡', '太麻里', '3', '15'),\n" +
                "('712600', '710000', '花莲县', '花莲', '2', '2'),\n" +
                "('712615', '712600', '花莲市', '花莲', '3', '5'),\n" +
                "('712616', '712600', '新城乡', '新城', '3', '10'),\n" +
                "('712617', '712600', '太鲁阁', '太鲁', '3', '12'),\n" +
                "('712618', '712600', '秀林乡', '秀林', '3', '11'),\n" +
                "('712619', '712600', '吉安乡', '吉安', '3', '7'),\n" +
                "('712620', '712600', '寿丰乡', '寿丰', '3', '9'),\n" +
                "('712621', '712600', '凤林镇', '凤林', '3', '2'),\n" +
                "('712622', '712600', '光复乡', '光复', '3', '4'),\n" +
                "('712623', '712600', '丰滨乡', '丰滨', '3', '1'),\n" +
                "('712624', '712600', '瑞穗乡', '瑞穗', '3', '8'),\n" +
                "('712625', '712600', '万荣乡', '万荣', '3', '13'),\n" +
                "('712626', '712600', '玉里镇', '玉里', '3', '14'),\n" +
                "('712627', '712600', '卓溪乡', '卓溪', '3', '6'),\n" +
                "('712628', '712600', '富里乡', '富里', '3', '3'),\n" +
                "('712700', '710000', '澎湖县', '澎湖', '2', '10'),\n" +
                "('712707', '712700', '马公市', '马公', '3', '4'),\n" +
                "('712708', '712700', '西屿乡', '西屿', '3', '5'),\n" +
                "('712709', '712700', '望安乡', '望安', '3', '6'),\n" +
                "('712710', '712700', '七美乡', '七美', '3', '2'),\n" +
                "('712711', '712700', '白沙乡', '白沙', '3', '1'),\n" +
                "('712712', '712700', '湖西乡', '湖西', '3', '3'),\n" +
                "('712800', '710000', '连江县', '连江', '2', '7'),\n" +
                "('712805', '712800', '南竿乡', '南竿', '3', '4'),\n" +
                "('712806', '712800', '北竿乡', '北竿', '3', '1'),\n" +
                "('712807', '712800', '莒光乡', '莒光', '3', '3'),\n" +
                "('712808', '712800', '东引乡', '东引', '3', '2'),";
        // 台湾地区
        printInfo(sql);

        sql = "('810000', '0', '香港特别行政区', '香港', '1', '32'),\n" +
                "('810100', '810000', '香港岛', '香港岛', '2', '2'),\n" +
                "('810101', '810100', '中西区', '中西', '3', '4'),\n" +
                "('810102', '810100', '湾仔', '湾仔', '3', '3'),\n" +
                "('810103', '810100', '东区', '东区', '3', '1'),\n" +
                "('810104', '810100', '南区', '南区', '3', '2'),\n" +
                "('810200', '810000', '九龙', '九龙', '2', '1'),\n" +
                "('810201', '810200', '九龙城区', '九龙城', '3', '3'),\n" +
                "('810202', '810200', '油尖旺区', '油尖旺', '3', '5'),\n" +
                "('810203', '810200', '深水埗区', '深水埗', '3', '4'),\n" +
                "('810204', '810200', '黄大仙区', '黄大仙', '3', '2'),\n" +
                "('810205', '810200', '观塘区', '观塘', '3', '1'),\n" +
                "('810300', '810000', '新界', '新界', '2', '3'),\n" +
                "('810301', '810300', '北区', '北区', '3', '1'),\n" +
                "('810302', '810300', '大埔区', '大埔', '3', '2'),\n" +
                "('810303', '810300', '沙田区', '沙田', '3', '6'),\n" +
                "('810304', '810300', '西贡区', '西贡', '3', '8'),\n" +
                "('810305', '810300', '元朗区', '元朗', '3', '9'),\n" +
                "('810306', '810300', '屯门区', '屯门', '3', '7'),\n" +
                "('810307', '810300', '荃湾区', '荃湾', '3', '5'),\n" +
                "('810308', '810300', '葵青区', '葵青', '3', '3'),\n" +
                "('810309', '810300', '离岛区', '离岛', '3', '4'),";
        // 香港地区
        printInfo(sql);

        sql = "('820000', '0', '澳门特别行政区', '澳门', '1', '33'),\n" +
                "('820100', '820000', '澳门半岛', '澳门半岛', '2', '1'),\n" +
                "('820200', '820000', '离岛', '离岛', '2', '2')";
        // 澳门地区
        printInfo(sql);



        closeStream();

        long endTime = System.currentTimeMillis();
        // System.out.println("总耗时：" + (endTime - startTime) / 1000 + "秒");
        logger.info("总耗时：{}秒", (endTime - startTime) / 1000);
    }

    /**
     * 初始化文件流
     *
     * @param file 文件
     */
    private void initFile(File file) {
        logger.debug("初始化文件：{}", file.getAbsolutePath());
        try {
            bufferedWriter = new BufferedWriter(new FileWriter(file, true));
        } catch (IOException e) {
            logger.error("文件初始化失败：{}", e.getMessage());
            throw new RuntimeException("文件初始化失败：" + e.getMessage());
        }
    }

    /**
     * 检测文件流是否初始化成功
     */
    private void cheekWriter() {
        if (bufferedWriter == null) {
            logger.error("文件未初始化或初始化失败");
            throw new RuntimeException("文件未初始化或初始化失败");
        }
    }

    /**
     * 关闭流
     */
    private void closeStream() {
        // System.out.println("关闭流");
        logger.debug("关闭流");
        if (bufferedWriter != null) {
            try {
                bufferedWriter.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            bufferedWriter = null;
        }
    }

    /**
     * 获取下个等级地址
     *
     * @param parentElement 节点
     * @param level         等级
     */
    private void parseNextLevel(Element parentElement, int level) {
        // 采集到第四个等级，乡镇街道
        if (level > 4) {
            return;
        }
        if(SCAN_INTERVAL > 0){
            try {
                logger.debug("睡眠{}ms", SCAN_INTERVAL);
                Thread.sleep(SCAN_INTERVAL);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "获取[" + parentElement.text() + "]链接页面dom：" + parentElement.attr("abs:href"));
        logger.debug("{}获取[{}]链接页面dom：{}", String.join("", Collections.nCopies(level, LINE)), parentElement.text(), parentElement.attr("abs:href"));
        Document doc = parse(parentElement.attr("abs:href"));
        if (doc != null) {

            // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点......");
            logger.debug("{}获取[{}]所有包含[{}]样式的tr节点......", String.join("", Collections.nCopies(level, LINE)), parentElement.text(), cssMap.get(level));
            Elements rows = doc.select("tr." + cssMap.get(level));
            if (rows.size() == 0) {
                // 东莞、中山 没有区
                if (level == 3) {
                    level = 4;
                    rows = doc.select("tr." + cssMap.get(level));
                    if (rows.size() == 0) {
                        // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点失败");
                        logger.error("{}获取[{}]所有包含[{}]样式的tr节点失败", String.join("", Collections.nCopies(level, LINE)), parentElement.text(), cssMap.get(level));
                        throw new RuntimeException("获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点失败");
                    }
                } else {
                    // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点失败");
                    logger.error("{}获取[{}]所有包含[{}]样式的tr节点失败", String.join("", Collections.nCopies(level, LINE)), parentElement.text(), cssMap.get(level));
                    throw new RuntimeException("获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点失败");
                }
            }
            //System.out.println(String.join("", Collections.nCopies(level, LINE)) + "获取[" + parentElement.text() + "]所有包含[" + cssMap.get(level) + "]样式的tr节点成功，共" + rows.size() + "个节点");
            logger.debug("{}获取[{}]所有包含[{}]样式的tr节点成功，共{}个节点", String.join("", Collections.nCopies(level, LINE)), parentElement.text(), cssMap.get(level), rows.size());

            //System.out.println(String.join("", Collections.nCopies(level, LINE)) + "列表[" + rows.text() + "] start......");
            logger.debug("{}列表[{}] start......", String.join("", Collections.nCopies(level, LINE)), rows.text());
            int sort = 0;
            for (Element row : rows) {
                sort += 1;
                // 在递归调用的时候，这里是判断是否是村一级的数据，村一级的数据没有a标签
                // 获取每组tr中所有的a标签，这里tr中两个td,每个td中一个a标签
                Elements select = row.select("a");
                if (select.size() != 0) {
                    // 选取的是最后一个即第二个a标签
                    printInfo(select.last(), level, sort);
                    parseNextLevel(select.last(), level + 1);
                }
            }
            // System.out.println(String.join("", Collections.nCopies(level, LINE)) + "列表[" + rows.text() + "] complete");
            logger.debug("{}列表[{}] complete", String.join("", Collections.nCopies(level, LINE)), rows.text());
        }
    }

    /**
     * 写一行数据到数据文件中去
     *
     * @param str 字符串
     */
    private void printInfo(String str) {
        cheekWriter();
        // INSERT INTO `address`.`sp_area` (`id`, `pid`, `name`, `shortname`, `level`, `sort`) VALUES
        try {
            logger.info("写入：{}", str);
            bufferedWriter.write(str);
            bufferedWriter.newLine();
            bufferedWriter.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    /**
     * 写一行数据到数据文件中去
     *
     * @param element 爬取到的数据元素
     * @param level   城市级别
     * @param sort    排序
     */
    private void printInfo(Element element, int level, int sort) {
        cheekWriter();
        String str;
        // ('110100', '110000', '北京市', '北京', '2', '1');
        try {
            String url = element.attr("href");
            if (url == null) {
                logger.error("获取[{}]中的链接失败", element.html());
                throw new RuntimeException("获取[" + element.html() + "]中的链接失败");
            }
            if (level == 1) {
                // 所有省份地址
                // 11 id: 110000 pid: 0
                String id = url.substring(0, url.indexOf(".html")) + "0000";
                String name = element.text();
                // 四个直辖市特殊处理
                if (id.equals("110000")) {
                    name = "北京";
                } else if (id.equals("120000")) {
                    name = "天津";
                } else if (id.equals("310000")) {
                    name = "上海";
                } else if (id.equals("500000")) {
                    name = "重庆";
                }

                String shortName;
                if(name.endsWith("省")){
                    shortName = name.substring(0, name.length() - 1);
                }else if (name.endsWith("壮族自治区") || name.endsWith("回族自治区")){
                    shortName = name.substring(0, name.length() - 5);
                }else if (name.endsWith("维吾尔自治区")){
                    shortName = name.substring(0, name.length() - 6);
                }else if (name.endsWith("自治区")){
                    shortName = name.substring(0, name.length() - 3);
                }else {
                    shortName = name;
                }
                str = "('" + id + "', '0', '" + name + "', '" + shortName + "', '" + level + "', '" + sort + "'),";
            } else {
                String[] urls = url.split("/");
                url = urls[1];
                String id = url.substring(0, url.indexOf(".html"));
                String pid;
                String name = element.text();
                String shortName = name;
                //直辖市：北京 天津 上海 重庆
                //设有省直辖县的省份：河南 湖北 海南 新疆

                switch (level) {
                    case 2:
                        // 1101  id: 110100  pid: 110000
                        id += "00";
                        pid = id.substring(0, 2) + "0000";
                        // 重庆下的县特殊处理
                        if (id.equals("500200")) {
                            return;
                        }
                        // 省直辖县级行政区划特殊处理(河南省直辖县级行政区划/湖北省直辖县级行政区划/海南省直辖县级行政区划/新疆省直辖县级行政区划)
                        if (id.endsWith("9000")) {
                            return;
                        }
                        // 四个直辖市的市辖区特殊处理
                        if (name.equals("市辖区")) {
                            if (id.equals("110100")) {
                                name = "北京市";
                            } else if (id.equals("120100")) {
                                name = "天津市";
                            } else if (id.equals("310100")) {
                                name = "上海市";
                            } else if (id.equals("500100")) {
                                name = "重庆市";
                            }
                            shortName = name;
                        }
                        // 是否裁剪自治州名称
                        if(SHORT_NAME){
                            // 市 盟 地区 林区
                            if(name.endsWith("土家族苗族自治州") || name.endsWith("布依族苗族自治州")
                                    || name.endsWith("哈尼族彝族自治州") || name.endsWith("傣族景颇族自治州") || name.endsWith("蒙古族藏族自治州")){
                                shortName = name.substring(0, name.length() - 8);
                            }else if(name.endsWith("藏族羌族自治州") || name.endsWith("苗族侗族自治州")
                                    || name.endsWith("壮族苗族自治州") || name.endsWith("柯尔克孜自治州")){
                                shortName = name.substring(0, name.length() - 7);
                            }else if(name.endsWith("朝鲜族自治州") || name.endsWith("傈僳族自治州") || name.endsWith("哈萨克自治州")){
                                shortName = name.substring(0, name.length() - 6);
                            }else if(name.endsWith("藏族自治州") || name.endsWith("彝族自治州") || name.endsWith("傣族自治州")
                                    || name.endsWith("白族自治州") || name.endsWith("回族自治州") || name.endsWith("蒙古自治州")){
                                shortName = name.substring(0, name.length() - 5);
                            }else if(name.endsWith("地区") || name.endsWith("林区")){
                                shortName = name.substring(0, name.length() - 2);
                            }else if(name.length() > 2 && (name.endsWith("市") || name.endsWith("盟"))){
                                shortName = name.substring(0, name.length() - 1);
                            }
                        }
                        break;
                    case 3:
                        // 110101 id: 110101 pid: 110100
                        pid = id.substring(0, 4) + "00";
                        // 重庆特殊处理
                        if (pid.equals("500200")) {
                            pid = "500100";
                        }
                        // 省直辖县级行政区划特殊处理(河南省直辖县级行政区划/湖北省直辖县级行政区划/海南省直辖县级行政区划/新疆省直辖县级行政区划)
                        if (pid.endsWith("9000")) {
                            pid = id.substring(0, 2) + "0000";
                        }
                        // 是否裁剪自治县名称
                        if(SHORT_NAME){
                            if(name.endsWith("拉祜族佤族布朗族傣族自治县")){
                                shortName = name.substring(0, name.length() - 13);
                            }else if(name.endsWith("保安族东乡族撒拉族自治县")){
                                shortName = name.substring(0, name.length() - 12);
                            }else if(name.endsWith("喀喇沁左翼蒙古族自治县")){
                                shortName = "喀左";
                            }else if(name.endsWith("彝族哈尼族拉祜族自治县")){
                                shortName = name.substring(0, name.length() - 11);
                            }else if(name.endsWith("傣族拉祜族佤族自治县") || name.endsWith("哈尼族彝族傣族自治县")){
                                shortName = name.substring(0, name.length() - 10);
                            }else if(name.endsWith("尔罗斯蒙古族自治县") || name.endsWith("彝族回族苗族自治县") || name.endsWith("苗族瑶族傣族自治县")){
                                shortName = name.substring(0, name.length() - 9);
                            } else if(name.endsWith("满族蒙古族自治县") || name.endsWith("独龙族怒族自治县") || name.endsWith("白族普米族自治县")
                                    || name.endsWith("苗族土家族自治县") || name.endsWith("苗族布依族自治县") || name.endsWith("布依族苗族自治县")
                                    || name.endsWith("仡佬族苗族自治县") || name.endsWith("哈尼族彝族自治县") || name.endsWith("土家族苗族自治县")){
                                shortName = name.substring(0, name.length() - 8);
                            } else if(name.endsWith("傣族佤族自治县") || name.endsWith("傣族彝族自治县") || name.endsWith("哈萨克族自治县")
                                    || name.endsWith("回族彝族自治县") || name.endsWith("回族土族自治县") || name.endsWith("壮族瑶族自治县")
                                    || name.endsWith("彝族傣族自治县") || name.endsWith("彝族回族自治县") || name.endsWith("彝族苗族自治县")
                                    || name.endsWith("苗族侗族自治县") || name.endsWith("黎族苗族自治县")){
                                shortName = name.substring(0, name.length() - 7);
                            } else if(name.endsWith("朝鲜族自治县") || name.endsWith("毛南族自治县") || name.endsWith("纳西族自治县")
                                    || name.endsWith("蒙古族自治县") || name.endsWith("裕固族自治县") || name.endsWith("哈萨克自治县")
                                    || name.endsWith("土家族自治县") || name.endsWith("塔吉克自治县") || name.endsWith("仫佬族自治县")
                                    || name.endsWith("傈僳族自治县") || name.endsWith("哈尼族自治县") || name.endsWith("拉祜族自治县")
                                    || name.endsWith("撒拉族自治县") ){
                                shortName = name.substring(0, name.length() - 6);
                            } else if(name.endsWith("佤族自治县") || name.endsWith("侗族自治县") || name.endsWith("各族自治县")
                                    || name.endsWith("回族自治县") || name.endsWith("土族自治县") || name.endsWith("彝族自治县")
                                    || name.endsWith("水族自治县") || name.endsWith("满族自治县") || name.endsWith("瑶族自治县")
                                    || name.endsWith("畲族自治县") || name.endsWith("羌族自治县") || name.endsWith("苗族自治县")
                                    || name.endsWith("蒙古自治县") || name.endsWith("藏族自治县") || name.endsWith("锡伯自治县")
                                    || name.endsWith("黎族自治县")){
                                shortName = name.substring(0, name.length() - 5);
                            } else if(name.endsWith("族自治县")){
                                shortName = name.substring(0, name.length() - 4);
                            }else if(name.length() > 2 && (name.endsWith("市") || name.endsWith("县"))){
                                shortName = name.substring(0, name.length() - 1);
                            }else if(name.length() > 2 && name.endsWith("区")
                                    && !name.endsWith("开发区") && !name.endsWith("管理区") && !name.endsWith("示范区")
                                    && !name.endsWith("名胜区") && !name.endsWith("园区") && !name.endsWith("新区")){
                                // -- 开发区 管理区 示范区 名胜区 园区 新区
                                shortName = name.substring(0, name.length() - 1);
                            }
                        }
                        break;
                    case 4:
                        // 110101001 id: 110101001 pid: 110101
                        pid = id.substring(0, 6);
                        if(name.endsWith("办事处")){
                            name = name.substring(0, name.length() - 3);
                            shortName = name;
                        }
                        break;
                    default:
                        logger.error("地址等级level：{}错误！！！", level);
                        throw new RuntimeException("地址等级level：" + level + "错误！！！");
                }
                str = "('" + id + "', '" + pid + "', '" + name + "', '" + shortName + "', '" + level + "', '" + sort + "'),";
            }
            logger.debug(String.join("", Collections.nCopies(level, LINE)));
            logger.debug(element.toString());
            logger.debug(String.join("", Collections.nCopies(level, LINE)));
            logger.info("{}写入：{}", String.join("", Collections.nCopies(level, LINE)), str);
            bufferedWriter.write(str);
            bufferedWriter.newLine();
            bufferedWriter.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    /**
     * 通过url解析dom
     *
     * @param url 链接
     * @return dom
     */
    private Document parse(String url) {
        if (url == null || url.isEmpty()) {
            throw new IllegalArgumentException("The input url('" + url + "') is invalid!");
        }
        // 请求次数
        int repeatTime = 0;
        while (repeatTime < FAILURE_REPEAT_TIME) {
            repeatTime++;
            try {
                // 睡眠时间根据失败次数增加而延长
                if(repeatTime > 0){
                    Thread.sleep(500 * repeatTime);
                }
                //开始请求
                // 方式一： return Jsoup.connect(url).timeout(INTERVAL).get();
                // 方式二： return Jsoup.parse(new URL(url).openStream(), "GBK", url);
                // 方式三：
                return Jsoup.parse(getConnection(url).getInputStream(), "GBK", url);
            } catch (Exception e) {
                logger.error("请求({})第{}次失败", url, repeatTime);
            }
        }
        throw new RuntimeException("解析链接连续" + repeatTime + "次错误");
    }

    /**
     * 获取请求链接
     *
     * @param url 请求链接
     * @return connection
     */
    private HttpURLConnection getConnection(String url) {
        try {
            URL urlObject = new URL(url);
            HttpURLConnection connection = (HttpURLConnection) urlObject.openConnection();
            //默认就是GET，可以采用POST
            connection.setRequestMethod("GET");
            //是否允许缓存，默认true。
            connection.setUseCaches(Boolean.FALSE);
            //是否开启输出输入，如果是post使用true。默认是false
            //connection.setDoOutput(Boolean.TRUE);
            //connection.setDoInput(Boolean.TRUE);
            //设置请求头信息
            connection.addRequestProperty("Connection", "close");
            //设置连接主机超时（单位：毫秒）
            connection.setConnectTimeout(TIMEOUT);
            //设置从主机读取数据超时（单位：毫秒）
            connection.setReadTimeout(TIMEOUT);
            //设置Cookie
            //connection.addRequestProperty("Cookie", "值");
            return connection;
        } catch (IOException e) {
            logger.error("获取链接({})出错：{}", url, e.getMessage());
            throw new RuntimeException("获取链接(" + url + ")出错：" + e.getMessage());
        }
    }
}